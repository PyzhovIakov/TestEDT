Процедура ОбработкаПроведения(Отказ, Режим)

	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");

	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура,
	|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблица1
	|ИЗ
	|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
	|ГДЕ
	|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
	|	И РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблица1.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблица1.Количество КАК Количество,
	|	ОстаткиНоменклатурыОстатки.Партия КАК Партия,
	|	ЕстьNull(СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток),0) КАК КоличествоОстаток,
	|	ЕстьNull(СУММА(ОстаткиНоменклатурыОстатки.СуммаОстаток),0) КАК СуммаОстаток
	|ИЗ
	|	ВременнаяТаблица1 КАК ВременнаяТаблица1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(&Дата, Номенклатура В
	|			(ВЫБРАТЬ
	|				ВременнаяТаблица1.Номенклатура
	|			ИЗ
	|				ВременнаяТаблица1 КАК ВременнаяТаблица1)) КАК ОстаткиНоменклатурыОстатки
	|		ПО ВременнаяТаблица1.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|СГРУППИРОВАТЬ ПО
	|	ВременнаяТаблица1.Номенклатура,
	|	ВременнаяТаблица1.Количество,
	|	ОстаткиНоменклатурыОстатки.Партия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Партия
	|ИТОГИ
	|	МАКСИМУМ(Количество) КАК Количество,
	|	МАКСИМУМ(СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидНоменклатуры", Перечисления.ВидыНоменклатуры.Товар);
	Запрос.УстановитьПараметр("Дата", Дата);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	МетодСписания=РегистрыСведений.УчетнаяПолитика.ПолучитьПоследнее(Дата, );
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток Тогда
			Сообщить("Товара " + ВыборкаНоменклатура.Номенклатура + " не хватает. есть = "
				+ ВыборкаНоменклатура.КоличествоОстаток);
			Отказ=Истина;
		КонецЕсли;
		Если Не Отказ Тогда
			Выборка = ВыборкаНоменклатура.Выбрать();
			Осталось = ВыборкаНоменклатура.Количество;
			Пока Осталось > 0 И Выборка.Следующий() Цикл
				Движение = Движения.ОстаткиНоменклатуры.Добавить();
				Движение.Период = Дата;
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Номенклатура = Выборка.Номенклатура;
				Движение.Партия = Выборка.Партия;
				Движение.Количество = Мин(Осталось, Выборка.КоличествоОстаток);
				Если МетодСписания.УчетнаяПолитика = ПредопределенноеЗначение("Перечисление.УчетнаяПолитика.ФИФО") Тогда
					Движение.Сумма =Движение.Количество / Выборка.КоличествоОстаток * Выборка.СуммаОстаток;
				Иначе
					Движение.Сумма =Движение.Количество / ВыборкаНоменклатура.КоличествоОстаток
						* ВыборкаНоменклатура.СуммаОстаток;
				КонецЕсли;

				Осталось=Осталось - Движение.Количество;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	Движения.ОстаткиНоменклатуры.Записывать = Истина;

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры